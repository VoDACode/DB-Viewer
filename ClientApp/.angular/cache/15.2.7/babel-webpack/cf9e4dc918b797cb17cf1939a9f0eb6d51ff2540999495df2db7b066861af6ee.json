{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SqlApiService {\n  constructor(http) {\n    this.http = http;\n  }\n  getFunctionNames() {\n    return this.http.get('/api/sql/func');\n  }\n  getProcedureNames() {\n    return this.http.get('/api/sql/proc');\n  }\n  getParams(name) {\n    return this.http.get(`/api/sql/params/${name}`);\n  }\n  runProcedure(name, params) {\n    var url = `/api/sql/proc/${name}?`;\n    for (var param of params) {\n      url += `${param.name}=${param.value}&`;\n    }\n    url = url.slice(0, -1);\n    url += '/call';\n    return this.http.get(url);\n  }\n  runFunction(name, params) {\n    var url = `/api/sql/func/${name}?`;\n    for (var param of params) {\n      url += `${param.name}=${param.value}&`;\n    }\n    url = url.slice(0, -1);\n    url += '/call';\n    return this.http.get(url);\n  }\n}\nSqlApiService.ɵfac = function SqlApiService_Factory(t) {\n  return new (t || SqlApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nSqlApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SqlApiService,\n  factory: SqlApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,aAAa;EAExBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAEjCC,gBAAgB;IACrB,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAW,eAAe,CAAC;EACjD;EAEOC,iBAAiB;IACtB,OAAO,IAAI,CAACH,IAAI,CAACE,GAAG,CAAW,eAAe,CAAC;EACjD;EAEOE,SAAS,CAACC,IAAY;IAC3B,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAa,mBAAmBG,IAAI,EAAE,CAAC;EAC7D;EAEOC,YAAY,CAACD,IAAY,EAAEE,MAAkB;IAClD,IAAIC,GAAG,GAAG,iBAAiBH,IAAI,GAAG;IAElC,KAAI,IAAII,KAAK,IAAIF,MAAM,EAAE;MACvBC,GAAG,IAAI,GAAGC,KAAK,CAACJ,IAAI,IAAII,KAAK,CAACC,KAAK,GAAG;;IAGxCF,GAAG,GAAGA,GAAG,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACtBH,GAAG,IAAI,OAAO;IACd,OAAO,IAAI,CAACR,IAAI,CAACE,GAAG,CAACM,GAAG,CAAC;EAC3B;EAEOI,WAAW,CAACP,IAAY,EAAEE,MAAkB;IACjD,IAAIC,GAAG,GAAG,iBAAiBH,IAAI,GAAG;IAClC,KAAI,IAAII,KAAK,IAAIF,MAAM,EAAE;MACvBC,GAAG,IAAI,GAAGC,KAAK,CAACJ,IAAI,IAAII,KAAK,CAACC,KAAK,GAAG;;IAExCF,GAAG,GAAGA,GAAG,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACtBH,GAAG,IAAI,OAAO;IACd,OAAO,IAAI,CAACR,IAAI,CAACE,GAAG,CAACM,GAAG,CAAC;EAC3B;;AApCWV,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAe,SAAbf,aAAa;EAAAgB,YAFZ;AAAM","names":["SqlApiService","constructor","http","getFunctionNames","get","getProcedureNames","getParams","name","runProcedure","params","url","param","value","slice","runFunction","factory","providedIn"],"sourceRoot":"","sources":["P:\\NURE\\СРБД\\ssdb_lw_4\\ClientApp\\src\\app\\services\\sql-api.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { SqlParam } from '../models/SqlParam';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SqlApiService {\n\n  constructor(private http: HttpClient) { }\n\n  public getFunctionNames() {\n    return this.http.get<string[]>('/api/sql/func');\n  }\n\n  public getProcedureNames() {\n    return this.http.get<string[]>('/api/sql/proc');\n  }\n\n  public getParams(name: string) {\n    return this.http.get<SqlParam[]>(`/api/sql/params/${name}`);\n  }\n\n  public runProcedure(name: string, params: SqlParam[]) {\n    var url = `/api/sql/proc/${name}?`;\n    \n    for(var param of params) {\n      url += `${param.name}=${param.value}&`;\n    }\n\n    url = url.slice(0, -1);\n    url += '/call'\n    return this.http.get(url);\n  }\n\n  public runFunction(name: string, params: SqlParam[]) {\n    var url = `/api/sql/func/${name}?`;\n    for(var param of params) {\n      url += `${param.name}=${param.value}&`;\n    }\n    url = url.slice(0, -1);\n    url += '/call'\n    return this.http.get(url);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}