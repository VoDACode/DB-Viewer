{"ast":null,"code":"import { BookModel } from 'src/app/models/BookModel';\nimport { BookReaderModel } from 'src/app/models/BookReaderModel';\nimport { LibraryModel } from 'src/app/models/LibraryModel';\nimport { ReaderModel } from 'src/app/models/ReaderModel';\nimport { TablePattern } from 'src/app/models/TablePattern';\nimport { TableApiService } from 'src/app/services/base-table-api.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../data-table/data-table.component\";\nfunction TablesComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 5)(1, \"a\", 6);\n    i0.ɵɵlistener(\"click\", function TablesComponent_li_3_Template_a_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const table_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.selectTable(table_r1.name));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const table_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMapInterpolate1(\"nav-link \", table_r1.selected ? \"active\" : \"\", \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(table_r1.name);\n  }\n}\nexport class TablesComponent {\n  get tablePattern() {\n    if (!this._tablePatterns.some(table => table.selected)) {\n      this._tablePatterns[0].selected = true;\n    }\n    var selectedTable = this._tablePatterns.find(table => table.selected)?.pattern ?? this._tablePatterns[0].pattern;\n    return selectedTable;\n  }\n  get tableHeaders() {\n    return this._tablePatterns.map(table => {\n      return {\n        name: table.pattern.name,\n        selected: table.selected\n      };\n    });\n  }\n  constructor(_http, route) {\n    this._http = _http;\n    this.route = route;\n    this._tablePatterns = [{\n      selected: true,\n      pattern: new TablePattern('Library', new TableApiService('library', this._http), LibraryModel)\n    }, {\n      selected: false,\n      pattern: new TablePattern('Book', new TableApiService('book', this._http), BookModel)\n    }, {\n      selected: false,\n      pattern: new TablePattern('Reader', new TableApiService('reader', this._http), ReaderModel)\n    }, {\n      selected: false,\n      pattern: new TablePattern('BookReader', new TableApiService('bookreader', this._http), BookReaderModel)\n    }];\n    this.route.params.subscribe(params => {\n      console.log(params);\n      this.selectTable(params['name']);\n    });\n  }\n  selectTable(name) {\n    this._tablePatterns.forEach(table => {\n      table.selected = table.pattern.name === name;\n    });\n  }\n}\nTablesComponent.ɵfac = function TablesComponent_Factory(t) {\n  return new (t || TablesComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nTablesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TablesComponent,\n  selectors: [[\"app-tables\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[1, \"card\"], [1, \"card-header\"], [1, \"nav\", \"nav-tabs\", \"card-header-tabs\"], [\"class\", \"nav-item\", 4, \"ngFor\", \"ngForOf\"], [3, \"tablePattern\"], [1, \"nav-item\"], [3, \"click\"]],\n  template: function TablesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"ul\", 2);\n      i0.ɵɵtemplate(3, TablesComponent_li_3_Template, 3, 4, \"li\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(4, \"app-data-table\", 4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tableHeaders);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"tablePattern\", ctx.tablePattern);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.DataTableComponent],\n  styles: [\"a[_ngcontent-%COMP%]{\\r\\n    cursor: pointer;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90YWJsZXMvdGFibGVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiYXtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["BookModel","BookReaderModel","LibraryModel","ReaderModel","TablePattern","TableApiService","i0","TablesComponent","tablePattern","_tablePatterns","some","table","selected","selectedTable","find","pattern","tableHeaders","map","name","constructor","_http","route","params","subscribe","console","log","selectTable","forEach","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["P:\\NURE\\СРБД\\ssdb_lw_4\\ClientApp\\src\\app\\components\\tables\\tables.component.ts","P:\\NURE\\СРБД\\ssdb_lw_4\\ClientApp\\src\\app\\components\\tables\\tables.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BookModel } from 'src/app/models/BookModel';\nimport { BookReaderModel } from 'src/app/models/BookReaderModel';\nimport { LibraryModel } from 'src/app/models/LibraryModel';\nimport { ReaderModel } from 'src/app/models/ReaderModel';\nimport { TablePattern } from 'src/app/models/TablePattern';\nimport { TableApiService } from 'src/app/services/base-table-api.service';\n\n@Component({\n  selector: 'app-tables',\n  templateUrl: './tables.component.html',\n  styleUrls: ['./tables.component.css']\n})\nexport class TablesComponent {\n  private _tablePatterns: { pattern: TablePattern, selected: boolean }[] = [\n    {\n      selected: true,\n      pattern: new TablePattern('Library', new TableApiService('library', this._http), LibraryModel)\n    },\n    {\n      selected: false,\n      pattern: new TablePattern('Book', new TableApiService('book', this._http), BookModel)\n    },\n    {\n      selected: false,\n      pattern: new TablePattern('Reader', new TableApiService('reader', this._http), ReaderModel)\n    },\n    {\n      selected: false,\n      pattern: new TablePattern('BookReader', new TableApiService('bookreader', this._http), BookReaderModel)\n    }\n  ];\n\n  public get tablePattern(): TablePattern {\n    if (!this._tablePatterns.some(table => table.selected)) {\n      this._tablePatterns[0].selected = true;\n    }\n    var selectedTable = this._tablePatterns.find(table => table.selected)?.pattern ?? this._tablePatterns[0].pattern;\n    return selectedTable;\n  }\n\n  public get tableHeaders(): { name: string, selected: boolean }[] {\n    return this._tablePatterns.map(table => {\n      return {\n        name: table.pattern.name,\n        selected: table.selected\n      };\n    });\n  }\n\n  constructor(private _http: HttpClient, private route: ActivatedRoute) {\n    this.route.params.subscribe(params => {\n      console.log(params);\n      this.selectTable(params['name']);\n    });\n  }\n\n  selectTable(name: string): void {\n    this._tablePatterns.forEach(table => {\n      table.selected = table.pattern.name === name;\n    });\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <ul class=\"nav nav-tabs card-header-tabs\">\n            <li class=\"nav-item\" *ngFor=\"let table of tableHeaders\">\n                <a class=\"nav-link {{table.selected ? 'active' : ''}}\"\n                    (click)=\"selectTable(table.name)\">{{table.name}}</a>\n            </li>\n        </ul>\n    </div>\n    <app-data-table [tablePattern]=\"tablePattern\"></app-data-table>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}