{"ast":null,"code":"export class TablePattern {\n  constructor(name, api, type, columns) {\n    this.name = name;\n    this.api = api;\n    this.type = type;\n    this.columns = columns;\n  }\n  static columnsFromType(type) {\n    // include subtypes\n    type = type.prototype;\n    const columns = [];\n    for (const key in type) {\n      if (type.hasOwnProperty(key)) {\n        const element = type[key];\n        columns.push({\n          name: key,\n          type: element\n        });\n      }\n    }\n    return columns;\n  }\n  static empty() {\n    return new TablePattern('', '', null, []);\n  }\n}","map":{"version":3,"mappings":"AAAA,OAAM,MAAOA,YAAY;EAMrBC,YAAYC,IAAY,EAAEC,GAAW,EAAEC,IAAS,EAAEC,OAAyC;IACvF,IAAI,CAACH,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,OAAO,GAAGA,OAAO;EAC1B;EAEA,OAAOC,eAAe,CAACF,IAAS;IAC5B;IACAA,IAAI,GAAGA,IAAI,CAACG,SAAS;IACrB,MAAMF,OAAO,GAAkC,EAAE;IACjD,KAAK,MAAMG,GAAG,IAAIJ,IAAI,EAAE;MACpB,IAAIA,IAAI,CAACK,cAAc,CAACD,GAAG,CAAC,EAAE;QAC1B,MAAME,OAAO,GAAGN,IAAI,CAACI,GAAG,CAAC;QACzBH,OAAO,CAACM,IAAI,CAAC;UAAET,IAAI,EAAEM,GAAG;UAAEJ,IAAI,EAAEM;QAAO,CAAE,CAAC;;;IAGlD,OAAOL,OAAO;EAClB;EAEA,OAAOO,KAAK;IACR,OAAO,IAAIZ,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC;EAC7C","names":["TablePattern","constructor","name","api","type","columns","columnsFromType","prototype","key","hasOwnProperty","element","push","empty"],"sourceRoot":"","sources":["P:\\NURE\\СРБД\\ssdb_lw_4\\ClientApp\\src\\app\\models\\TablePattern.ts"],"sourcesContent":["export class TablePattern {\r\n    public name: string;\r\n    public columns: { name: string, type: string }[];\r\n    public api: string;\r\n    public type: any;\r\n\r\n    constructor(name: string, api: string, type: any, columns: { name: string, type: string }[]) {\r\n        this.name = name;\r\n        this.api = api;\r\n        this.type = type;\r\n        this.columns = columns;\r\n    }\r\n\r\n    static columnsFromType(type: any): { name: string, type: any }[] {\r\n        // include subtypes\r\n        type = type.prototype;\r\n        const columns: { name: string, type: any }[] = [];\r\n        for (const key in type) {\r\n            if (type.hasOwnProperty(key)) {\r\n                const element = type[key];\r\n                columns.push({ name: key, type: element });\r\n            }\r\n        }\r\n        return columns;\r\n    }\r\n\r\n    static empty() {\r\n        return new TablePattern('', '', null, []);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}