{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/sql-api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction SqlComponent_option_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"option\", 21);\n    i0.ɵɵlistener(\"click\", function SqlComponent_option_29_Template_option_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const target_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.selectName(target_r3.name));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const target_r3 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", target_r3.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(target_r3.name);\n  }\n}\nfunction SqlComponent_tr_44_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"input\", 22);\n    i0.ɵɵlistener(\"ngModelChange\", function SqlComponent_tr_44_Template_input_ngModelChange_4_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const param_r6 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(param_r6.value = $event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const param_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(param_r6.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", param_r6.value);\n  }\n}\nfunction SqlComponent_div_52_th_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const column_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(column_r12);\n  }\n}\nfunction SqlComponent_div_52_tr_9_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const column_r15 = ctx.$implicit;\n    const row_r13 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(row_r13[column_r15]);\n  }\n}\nfunction SqlComponent_div_52_tr_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, SqlComponent_div_52_tr_9_td_1_Template, 2, 1, \"td\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const table_r9 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", table_r9.columns);\n  }\n}\nfunction SqlComponent_div_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"div\", 4)(2, \"h2\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"table\", 17)(5, \"thead\")(6, \"tr\");\n    i0.ɵɵtemplate(7, SqlComponent_div_52_th_7_Template, 2, 1, \"th\", 18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"tbody\");\n    i0.ɵɵtemplate(9, SqlComponent_div_52_tr_9_Template, 2, 1, \"tr\", 18);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const table_r9 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(table_r9.table);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", table_r9.columns);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", table_r9.rows);\n  }\n}\nexport class SqlComponent {\n  get onlyInParams() {\n    return this.targetParams.filter(param => param.mode === 'IN');\n  }\n  constructor(sqlApiService) {\n    this.sqlApiService = sqlApiService;\n    this.targetType = 'procedure';\n    this.targetObjects = [];\n    this.targetParams = [];\n    this.result = [];\n    this.loadNames();\n  }\n  selectType(type) {\n    this.targetType = type;\n    this.loadNames();\n  }\n  loadNames() {\n    if (this.targetType === 'function') {\n      this.sqlApiService.getFunctionNames().subscribe(names => {\n        this.targetObjects = names.map(name => {\n          return {\n            name: name,\n            selected: false\n          };\n        });\n        this.targetObjects[0].selected = true;\n        this.selectName(this.targetObjects[0].name);\n      });\n    } else {\n      this.sqlApiService.getProcedureNames().subscribe(names => {\n        this.targetObjects = names.map(name => {\n          return {\n            name: name,\n            selected: false\n          };\n        });\n        this.targetObjects[0].selected = true;\n        this.selectName(this.targetObjects[0].name);\n      });\n    }\n  }\n  selectName(name) {\n    this.sqlApiService.getParams(name).subscribe(params => {\n      this.targetParams = params;\n    });\n  }\n  run() {\n    var selectedName = this.targetObjects.find(name => name.selected)?.name;\n    if (!selectedName) {\n      return;\n    }\n    if (this.targetType === 'function') {\n      this.sqlApiService.runFunction(selectedName, this.onlyInParams).subscribe(result => {\n        console.log(result);\n        this.parseResult(result);\n      });\n    } else if (this.targetType === 'procedure') {\n      this.sqlApiService.runProcedure(selectedName, this.onlyInParams).subscribe(result => {\n        console.log(result);\n        this.parseResult(result);\n      });\n    }\n  }\n  parseResult(result) {\n    // result this is xml\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(result, \"text/xml\");\n    const doc = xmlDoc.getElementsByTagName('DocumentElement')[0];\n    for (let i = 0; i < doc.children.length; i++) {\n      const table = doc.children[i];\n      const data = {\n        table: table.tagName,\n        columns: [],\n        rows: []\n      };\n      for (let j = 0; j < table.children.length; j++) {\n        const column = table.children[j];\n        if (data.columns.indexOf(column.tagName) === -1) {\n          data.columns.push(column.tagName);\n        }\n      }\n      this.result.push(data);\n    }\n    console.log(this.result);\n  }\n}\nSqlComponent.ɵfac = function SqlComponent_Factory(t) {\n  return new (t || SqlComponent)(i0.ɵɵdirectiveInject(i1.SqlApiService));\n};\nSqlComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SqlComponent,\n  selectors: [[\"app-sql\"]],\n  decls: 53,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col\", \"align-self-start\"], [1, \"setupbox\"], [1, \"col\", \"text-center\"], [1, \"col-form-label\"], [1, \"col\"], [1, \"form-check\"], [\"type\", \"radio\", \"id\", \"formCheck-1\", \"name\", \"exec_type\", \"checked\", \"\", 1, \"form-check-input\", 3, \"click\"], [\"for\", \"formCheck-1\", 1, \"form-check-label\"], [\"type\", \"radio\", \"id\", \"formCheck-2\", \"name\", \"exec_type\", 1, \"form-check-input\", 3, \"click\"], [\"for\", \"formCheck-2\", 1, \"form-check-label\"], [1, \"col\", \"align-self-start\", \"text-center\"], [3, \"value\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"col\", \"align-self-center\", \"text-center\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"btn-lg\", 3, \"click\"], [1, \"table-responsive\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"result-box\"], [\"class\", \"table-responsive\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"click\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function SqlComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 1)(5, \"div\", 4)(6, \"label\", 5);\n      i0.ɵɵtext(7, \"Object type\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(8, \"div\", 1)(9, \"div\", 6)(10, \"div\", 7)(11, \"input\", 8);\n      i0.ɵɵlistener(\"click\", function SqlComponent_Template_input_click_11_listener() {\n        return ctx.selectType(\"procedure\");\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"label\", 9);\n      i0.ɵɵtext(13, \"Procedures\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(14, \"div\", 1)(15, \"div\", 6)(16, \"div\", 7)(17, \"input\", 10);\n      i0.ɵɵlistener(\"click\", function SqlComponent_Template_input_click_17_listener() {\n        return ctx.selectType(\"function\");\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"label\", 11);\n      i0.ɵɵtext(19, \"Functions\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(20, \"div\", 12)(21, \"div\", 3)(22, \"div\", 1)(23, \"div\", 6)(24, \"label\", 5);\n      i0.ɵɵtext(25, \"Object list\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"div\", 1)(27, \"div\", 6)(28, \"select\");\n      i0.ɵɵtemplate(29, SqlComponent_option_29_Template, 2, 2, \"option\", 13);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(30, \"div\", 14)(31, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function SqlComponent_Template_button_click_31_listener() {\n        return ctx.run();\n      });\n      i0.ɵɵtext(32, \"Run\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(33, \"div\", 1)(34, \"div\", 6)(35, \"div\", 16)(36, \"table\", 17)(37, \"thead\")(38, \"tr\")(39, \"th\");\n      i0.ɵɵtext(40, \"Parameter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"th\");\n      i0.ɵɵtext(42, \"Value\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(43, \"tbody\");\n      i0.ɵɵtemplate(44, SqlComponent_tr_44_Template, 5, 2, \"tr\", 18);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(45, \"div\", 1)(46, \"div\", 4)(47, \"h1\");\n      i0.ɵɵtext(48, \"Result\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(49, \"div\", 1)(50, \"div\", 6)(51, \"div\", 19);\n      i0.ɵɵtemplate(52, SqlComponent_div_52_Template, 10, 3, \"div\", 20);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(29);\n      i0.ɵɵproperty(\"ngForOf\", ctx.targetObjects);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.onlyInParams);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.result);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\".text-center[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.setupbox[_ngcontent-%COMP%] {\\r\\n    border-radius: 5px;\\r\\n    margin: 5px;\\r\\n    padding: 5px;\\r\\n    border: 3px solid var(--bs-gray);\\r\\n}\\r\\n\\r\\n.result-box[_ngcontent-%COMP%] {\\r\\n    border: 3px solid var(--bs-dark-border-subtle);\\r\\n    border-radius: 5px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zcWwvc3FsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsV0FBVztJQUNYLFlBQVk7SUFDWixnQ0FBZ0M7QUFDcEM7O0FBRUE7SUFDSSw4Q0FBOEM7SUFDOUMsa0JBQWtCO0FBQ3RCIiwic291cmNlc0NvbnRlbnQiOlsiLnRleHQtY2VudGVyIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLnNldHVwYm94IHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIG1hcmdpbjogNXB4O1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gICAgYm9yZGVyOiAzcHggc29saWQgdmFyKC0tYnMtZ3JheSk7XHJcbn1cclxuXHJcbi5yZXN1bHQtYm94IHtcclxuICAgIGJvcmRlcjogM3B4IHNvbGlkIHZhcigtLWJzLWRhcmstYm9yZGVyLXN1YnRsZSk7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","SqlComponent","onlyInParams","targetParams","filter","param","mode","constructor","sqlApiService","loadNames","selectType","type","targetType","getFunctionNames","subscribe","names","targetObjects","map","name","selected","selectName","getProcedureNames","getParams","params","run","selectedName","find","runFunction","result","console","log","parseResult","runProcedure","parser","DOMParser","xmlDoc","parseFromString","doc","getElementsByTagName","i","children","length","table","data","tagName","columns","rows","j","column","indexOf","push","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["P:\\NURE\\СРБД\\ssdb_lw_4\\ClientApp\\src\\app\\components\\sql\\sql.component.html","P:\\NURE\\СРБД\\ssdb_lw_4\\ClientApp\\src\\app\\components\\sql\\sql.component.ts"],"sourcesContent":["<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col align-self-start\">\n            <div class=\"setupbox\">\n                <div class=\"row\">\n                    <div class=\"col text-center\">\n                        <label class=\"col-form-label\">Object type</label>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" type=\"radio\" id=\"formCheck-1\" name=\"exec_type\" checked (click)=\"selectType('procedure')\">\n                            <label class=\"form-check-label\" for=\"formCheck-1\">Procedures</label>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" type=\"radio\" id=\"formCheck-2\" name=\"exec_type\" (click)=\"selectType('function')\">\n                            <label class=\"form-check-label\" for=\"formCheck-2\">Functions</label>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col align-self-start text-center\">\n            <div class=\"setupbox\">\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <label class=\"col-form-label\">Object list</label>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <select>\n                            <option *ngFor=\"let target of targetObjects\" value=\"{{target.name}}\" (click)=\"selectName(target.name)\">{{target.name}}</option>\n                        </select>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col align-self-center text-center\">\n            <button class=\"btn btn-success btn-lg\" type=\"button\" (click)=\"run()\">Run</button>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col\">\n            <div class=\"table-responsive\">\n                <table class=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Parameter</th>\n                            <th>Value</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let param of onlyInParams\">\n                            <td>{{param.name}}</td>\n                            <td>\n                                <input type=\"text\" [(ngModel)]=\"param.value\">\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col text-center\">\n            <h1>Result</h1>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col\">\n            <div class=\"result-box\">\n                <div class=\"table-responsive\" *ngFor=\"let table of result\">\n                    <div class=\"col text-center\">\n                        <h2>{{table.table}}</h2>\n                    </div>\n                    <table class=\"table\">\n                        <thead>\n                            <tr>\n                                <th *ngFor=\"let column of table.columns\">{{column}}</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let row of table.rows\">\n                                <td *ngFor=\"let column of table.columns\">{{row[column]}}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport { SqlParam } from 'src/app/models/SqlParam';\nimport { SqlApiService } from 'src/app/services/sql-api.service';\n\ntype SqlResult = {\n  table: string;\n  columns: string[];\n  rows: {\n    [key: string]: string;\n  }[];\n};\n\n@Component({\n  selector: 'app-sql',\n  templateUrl: './sql.component.html',\n  styleUrls: ['./sql.component.css']\n})\nexport class SqlComponent {\n  targetType: 'function' | 'procedure' = 'procedure';\n\n  targetObjects: { name: string; selected: boolean }[] = [];\n\n  targetParams: SqlParam[] = [];\n\n  result: SqlResult[] = [];\n\n  get onlyInParams(): SqlParam[] {\n    return this.targetParams.filter((param) => param.mode === 'IN');\n  }\n\n  constructor(private sqlApiService: SqlApiService) {\n    this.loadNames();\n  }\n\n  selectType(type: 'function' | 'procedure'): void {\n    this.targetType = type;\n    this.loadNames();\n  }\n\n  private loadNames(): void {\n    if (this.targetType === 'function') {\n      this.sqlApiService.getFunctionNames().subscribe((names) => {\n        this.targetObjects = names.map((name) => {\n          return {\n            name: name,\n            selected: false\n          };\n        });\n        this.targetObjects[0].selected = true;\n        this.selectName(this.targetObjects[0].name);\n      });\n    } else {\n      this.sqlApiService.getProcedureNames().subscribe((names) => {\n        this.targetObjects = names.map((name) => {\n          return {\n            name: name,\n            selected: false\n          };\n        });\n        this.targetObjects[0].selected = true;\n        this.selectName(this.targetObjects[0].name);\n      });\n    }\n  }\n\n  selectName(name: string): void {\n    this.sqlApiService.getParams(name).subscribe((params) => {\n      this.targetParams = params;\n    });\n  }\n\n  run(): void {\n    var selectedName = this.targetObjects.find((name) => name.selected)?.name;\n    if (!selectedName) {\n      return;\n    }\n    if (this.targetType === 'function') {\n      this.sqlApiService\n        .runFunction(selectedName, this.onlyInParams)\n        .subscribe((result) => {\n          console.log(result);\n          this.parseResult(result);\n        });\n    } else if (this.targetType === 'procedure') {\n      this.sqlApiService\n        .runProcedure(selectedName, this.onlyInParams)\n        .subscribe((result) => {\n          console.log(result);\n          this.parseResult(result);\n        });\n    }\n  }\n\n  parseResult(result: any): void {\n    // result this is xml\n    const parser = new DOMParser()\n    const xmlDoc = parser.parseFromString(result, \"text/xml\");\n    const doc = xmlDoc.getElementsByTagName('DocumentElement')[0];\n    for (let i = 0; i < doc.children.length; i++) {\n      const table = doc.children[i];\n      const data: SqlResult = {\n        table: table.tagName,\n        columns: [],\n        rows: []\n      };\n      \n      for (let j = 0; j < table.children.length; j++) {\n        const column = table.children[j];\n        if(data.columns.indexOf(column.tagName) === -1) {\n          data.columns.push(column.tagName);\n        }\n      }\n\n      \n      this.result.push(data);\n    }\n\n    console.log(this.result);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}